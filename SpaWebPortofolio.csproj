<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <Authors>Software Ateliers</Authors>
    <Company>Software Ateliers</Company>
    <Description>ASP.NET Core + Vue.js starter project</Description>
    <Copyright>MIT 2020 Software Ateliers</Copyright>
    <AssemblyName>SpaWebPortofolio</AssemblyName>
    <RootNamespace>SpaWebPortofolio</RootNamespace>
	<Version>2.5.1</Version>
	<AssemblyVersion>2.5.1.0</AssemblyVersion>
	<FileVersion>2.5.1.0</FileVersion>
	<UserSecretsId>a59a4487-85cb-49a8-a7c8-07ec7c3e8861</UserSecretsId>
	<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
	<DockerfileContext>.</DockerfileContext>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="HtmlSanitizer" Version="5.0.355" />
    <PackageReference Include="IdentityServer4" Version="4.1.1" />
    <PackageReference Include="IdentityServer4.AspNetIdentity" Version="4.1.1" />
    <PackageReference Include="IdentityServer4.EntityFramework" Version="4.1.1" />
    <PackageReference Include="MailKit" Version="2.9.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.9" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.8" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.9" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.9" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="3.1.9" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.9" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.9" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.10.9" />
    <PackageReference Include="SixLabors.ImageSharp" Version="1.0.1" />
    <PackageReference Include="VueCliMiddleware" Version="3.1.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <Content Update="Pages\Account\Login.cshtml">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="wwwroot\files\messageEmailTemplate.html">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="wwwroot\laptop.jpg">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="wwwroot\misty-forest.jpg">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="wwwroot\misty-waters.jpg">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="wwwroot\mountains.jpg">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="wwwroot\profileavatar.jpeg">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="wwwroot\admin-logo.png">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Update="wwwroot\favicon.ico">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\plugins\axios.ts" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <_ContentIncludedByDefault Remove="client-app\package-lock.json" />
    <_ContentIncludedByDefault Remove="client-app\package.json" />
    <_ContentIncludedByDefault Remove="client-app\tsconfig.json" />
    <_ContentIncludedByDefault Remove="wwwroot\static\css\app.08c15f1e.css" />
    <_ContentIncludedByDefault Remove="wwwroot\static\css\chunk-vendors.bde6f958.css" />
    <_ContentIncludedByDefault Remove="wwwroot\static\js\app.a25fb8fb.js" />
    <_ContentIncludedByDefault Remove="wwwroot\static\js\app.a25fb8fb.js.map" />
    <_ContentIncludedByDefault Remove="wwwroot\static\js\chunk-vendors.9cd0a70c.js" />
    <_ContentIncludedByDefault Remove="wwwroot\static\js\chunk-vendors.9cd0a70c.js.map" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Attributes" />
    <Folder Include="ClientApp\src\components\Common" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
